name: Docker Image CI

on:
  push:
    branches: [ "stable" ]

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
     
      - name: Build and save Docker image
        run: |
          docker build -t zent-bot:latest .
          docker save zent-bot:latest | gzip > zent-bot.tar.gz

      - name: Setup cloudflared
        uses: AnimMouse/setup-cloudflared@v2

      - name: Setup SSH
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > ssh_private_key
          chmod 600 ssh_private_key

          cat <<EOF > ssh_config
          Host ssh_server
            HostName ${{ secrets.SERVER_HOST }}
            User ${{ secrets.SERVER_USER }}
            Port ${{ secrets.SERVER_PORT }}
            ProxyCommand cloudflared access ssh --hostname %h
            IdentityFile ssh_private_key
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
          EOF
          
      - name: Transfer Docker image to server
        run: |
          ssh -F ssh_config ssh_server << 'EOF'
            rm -rf /tmp/zent-bot
            mkdir -p /tmp/zent-bot
          EOF
          
          scp -F ssh_config zent-bot.tar.gz docker-compose.yml ssh_server:/tmp/zent-bot/

      - name: Copy and deploy to server
        run: |
          ssh -F ssh_config ssh_server << 'EOF'
            cd /tmp/zent-bot
          
            docker load < zent-bot.tar.gz

            docker compose -f docker-compose.yml down || true

            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
            echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

            docker compose -f docker-compose.yml up -d

            rm zent-bot.tar.gz
            docker image prune -f
          EOF
          
